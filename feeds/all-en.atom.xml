<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Harsha Chenji</title><link href="http://localhost/" rel="alternate"></link><link href="http://localhost/feeds%5Call-en.atom.xml" rel="self"></link><id>http://localhost/</id><updated>2012-04-01T09:19:00-05:00</updated><entry><title>Theme Madness</title><link href="http://localhost/theme-madness.html" rel="alternate"></link><updated>2012-04-01T09:19:00-05:00</updated><author><name>Harsha</name></author><id>tag:localhost,2012-04-01:theme-madness.html</id><summary type="html">&lt;p&gt;This site has a "static" homepage, with the actual blog being a pseudo page. Static pages and blog posts will use the same theme this way, providing for a good integrated look. I was searching for a "skeleton" theme which would provide a good starting point to fork my own theme. A quick search yielded the Skeleton responsive theme, which looked good. Pages have a "wide" template available, which removes the widgets at the right. What is this "responsive" buzzword? It just means a theme which "responds" to your actions, which in this case means adjusting the layout of the site based on window resizing. This way, it works on smarphones and tablets as well. &lt;/p&gt;
&lt;h2&gt;Heavy&lt;/h2&gt;
&lt;p&gt;Somehow, the theme seemed too heavy after looking at sites like &lt;a href="http://stevelosh.com"&gt;stevelosh.com&lt;/a&gt;. Searched again, got spammed in the search results, then found a non-spammy looking list of free responsive themes. Scherzo seemed nice and minimalistic...till I looked at the creator's webpage. That seemed like the ideal theme, a nice looking "responsive" theme with a non-intrusive sidebar. As of now, I use a modified Scherzo theme, which seems to be working well.&lt;/p&gt;
&lt;h2&gt;Fonts&lt;/h2&gt;
&lt;p&gt;Typekit, no second thoughts there. Google has some free web fonts, but not many professionally designed themes from good foundries. Decided on a serif body font with a sans-serif header font. So be it!&lt;/p&gt;</summary></entry><entry><title>Site Creation</title><link href="http://localhost/site-creation.html" rel="alternate"></link><updated>2012-03-30T14:14:00-05:00</updated><author><name>Harsha</name></author><id>tag:localhost,2012-03-30:site-creation.html</id><summary type="html">&lt;p&gt;I host my website on NearlyFreeSpeech (NFS), which is a great host. Storage is quite expensive, so is bandwidth to an extent - which is what made me think of using Amazon S3 to store stuff (big fan of Amazon's services). Now how do I automate moving all my static content to S3? W3 total cache seemed the right candidate.&lt;/p&gt;
&lt;h2&gt;W3tc&lt;/h2&gt;
&lt;p&gt;Installation was not supported if my web server ran PHP in safe mode, which is what NFS with its fast PHP option runs. Not a problem, pulled the latest version from trunk. The menu is quite nice and things are easy to setup. Being overenthusiastic, I enabled all the caching techniques. Soon, I see obnoxious page load times:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://i.imgur.com/21kms.png?1"&gt;&lt;img alt="alt text" src="http://i.imgur.com/21kms.png?1" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;At this point I had no understanding of how web hosting works, so the initial blame fell on NFS and its "slow"ness because of the (supposed) overloading of its servers.&lt;/p&gt;
&lt;h2&gt;False!&lt;/h2&gt;
&lt;p&gt;After a quick "cloud" support ticket on NFS, which works on a per-ticket cost basis, I was told that the w3tc plugin was in fact the real culprit, not NFS. Disabled all caching except browser caching, and hoohah no more delay. Currently, the whole page loads in ~1 second, with the first GET request suffering a waiting time of &amp;lt; 500ms on average, unlike previously. The tools I used? Firebug, Chrome's own Network analysis from its developer tools, Pingdom which has a nice waterfall display, and YSlow from Yahoo. All good. &lt;/p&gt;
&lt;h2&gt;S3 vs. Cloudfront&lt;/h2&gt;
&lt;p&gt;S3 was quite easy to setup from W3tc's settings page. I uploaded all static content to a bucket on S3, from which it is currently served (cdn.hchenji.com). S3 is not exactly a CDN, it is just a highly reliable storage service. Using Amazon's Cloudfront (served as a cloudfront.net URL) will geographically optimize the serving of page components, which makes it a CDN. How much will this reduce the delay by?&lt;/p&gt;
&lt;p&gt;Actually...it worsened the page load time to about 1.5 s as compared to the current ~1 second with S3 based content serving. Why? Probably the extra PHP processing that the plugin does. I do not have time to investigate this, but if anyone knows more about this please leave a comment. No more Cloud for me, S3 is good enough.&lt;/p&gt;
&lt;h2&gt;Smushing&lt;/h2&gt;
&lt;p&gt;YSlow recommended smushing my css backgroung image, which is the blue border that you see at the top. It is actually a very small file that is made to repeat horizontally. The embedded metadata can be stripped, it serves no purpose. This is part of what Smush.it does, the other part being lossless compression. Using this service caused a 99% reduction in file size. Page load times? About 100ms saved! I did not know that service existed if not for YSlow. &lt;/p&gt;</summary></entry></feed>